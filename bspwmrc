#!/bin/sh

#LAUNCHERS
$HOME/.config/bspwm/autostart.sh
#fix for moving spotify to specific workspace
#bspc config external_rules_command ~/.config/bspwm/scripts/external_rules_command

#BSPWM configuration
#bspc config border_radius       8
bspc config border_width         2
bspc config window_gap           5
bspc config top_padding          55
bspc config bottom_padding       5
bspc config left_padding         5
bspc config right_padding        5
bspc config single_monocle       false
#bspc config click_to_focus       true
bspc config split_ratio          0.50
bspc config borderless_monocle   true
bspc config gapless_monocle      true
#bspc config focus_by_distance    true
bspc config focus_follows_pointer true
#bspc config history_aware_focus  true
bspc config pointer_modifier mod4
bspc config pointer_action1 move
bspc config pointer_action2 resize_side
bspc config pointer_action3 resize_corner
bspc config remove_disabled_monitors true
bspc config merge_overlapping_monitors true

#BSPWM coloring
bspc config normal_border_color		"#4c566a"
bspc config active_border_color		"#1e1e1e"
bspc config focused_border_color	"#c678dd"
bspc config presel_feedback_color	"#c678dd"
#bspc config urgent_border_color 	"#dd2727"

EXTERNAL_MONITOR="HDMI-1"
INTERNAL_MONITOR="eDP-1"
if [[ "$1" = 0 ]]; then
	if [[ $(xrandr --query | grep "${EXTERNAL_MONITOR} connected") ]]; then
		bspc monitor "$EXTERNAL_MONITOR" -d 1 2 3 4 5 6 7
		bspc monitor "$INTERNAL_MONITOR" -d 8 9 10
		bspc wm -O "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR"
	else
		bspc monitor "$INTERNAL_MONITOR" -d 1 2 3 4 5 6 7 8 9 10
	fi
fi

monitor_add() {
	# Move the first seven workspaces to the external
	for desktop in $(bspc query -D --names -m "$INTERNAL_MONITOR" | sed 7q); do
		 bspc desktop "$desktop" --to-monitor "$EXTERNAL_MONITOR"
	done

	# Remove default desktop created by bspwm
	bspc desktop Desktop --remove

	# reorder monitors
	bspc wm -O "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR" 
	$HOME/.config/polybar/launch.sh &
}

monitor_remove() {
  # Add default temp desktop because a minimum of one desktop is required per monitor
  bspc monitor "$EXTERNAL_MONITOR" -a Desktop

  # Move all desktops except the last default desktop to internal monitor
  for desktop in $(bspc query -D -m "$EXTERNAL_MONITOR");	do
    bspc desktop "$desktop" --to-monitor "$INTERNAL_MONITOR"
  done

  # delete default desktops
  bspc desktop Desktop --remove

  # reorder desktops
  bspc monitor "$INTERNAL_MONITOR" -o 1 2 3 4 5 6 7 8 9 10
  $HOME/.config/polybar/launch.sh &
}

if [[ $(xrandr -q | grep "${EXTERNAL_MONITOR} connected") ]]; then
  # set xrandr rules for docked setup
  xrandr --output "$INTERNAL_MONITOR" --mode 1920x1080 --pos 0x0 --rotate normal --output "$EXTERNAL_MONITOR" --primary --mode 1920x1080 --pos 1920x0 --rotate normal
  if [[ $(bspc query -D -m "${EXTERNAL_MONITOR}" | wc -l) -ne 7 ]]; then
    monitor_add
  fi
  bspc wm -O "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR"
else
  # set xrandr rules for mobile setup
  xrandr --output "$INTERNAL_MONITOR" --primary --mode 1920x1080 --pos 0x0 --rotate normal --output "$EXTERNAL_MONITOR" --off
  if [[ $(bspc query -D -m "${INTERNAL_MONITOR}" | wc -l) -ne 10 ]]; then
    monitor_remove
  fi
fi
#Single monitor
#bspc monitor -d 1 2 3 4 5 6 7 8 9 10

#Dual monitor
#find out names with arandr or xrandr
#bspc monitor LVDS1 -d 1 2 3 4
#bspc monitor DP3 -d  5 6 7 8 9
#bspc monitor HDMI-0 -d 1 2 3 4 5 6 7 8 9 10
#bspc monitor HDMI1 -d 1 2 3 4 5
#bspc monitor HDMI2 -d 6 7 8 9 10

#Fullscreen applications
bspc rule -a inkscape state=fullscreen
bspc rule -a Spotify state=fullscreen
bspc rule -a Vlc state=fullscreen
bspc rule -a VirtualBox Manager state=fullscreen
bspc rule -a VirtualBox Machine state=fullscreen
#bspc rule -a Gimp state=fullscreen

#Floating applications
bspc rule -a Arandr state=floating
#bspc rule -a Archlinux-tweak-tool.py state=floating
bspc rule -a Arcolinux-welcome-app.py state=floating
bspc rule -a Arcolinux-calamares-tool.py state=floating
bspc rule -a feh state=floating
#bspc rule -a mpv state=floating sticky=on
#bspc rule -a Font-manager state=floating
bspc rule -a Galculator state=floating
#bspc rule -a Gpick state=floating sticky=on
#bspc rule -a Nitrogen state=floating
bspc rule -a Oblogout state=floating
#bspc rule -a Pavucontrol state=floating sticky=on
#bspc rule -a Peek state=floating
#bspc rule -a rofi state=floating sticky=on
#bspc rule -a Skype state=floating
#bspc rule -a Stacer state=floating
#bspc rule -a Xfce4-appfinder state=floating sticky=on
bspc rule -a Xfce4-terminal state=floating

#Tiled applications
bspc rule -a Gnome-disks state=tiled
bspc rule -a Xfce4-settings-manager state=tiled

#open applications on specific workspaces
#bspc rule -a Firefox desktop='^1' follow=on
#bspc rule -a Google-chrome desktop='^1' follow=on
#bspc rule -a Chromium desktop='^1'  follow=on
#bspc rule -a Subl desktop='^2' follow=on
#bspc rule -a Atom desktop='^2' follow=on
#bspc rule -a Steam desktop='^5'
#bspc rule -a vlc desktop='^6'  follow=on
#bspc rule -a mpv desktop='^6'  follow=on
#bspc rule -a Vivaldi-stable desktop='^6' follow=on
#bspc rule -a Vivaldi-snapshot desktop='^6' follow=on
#bspc rule -a Transmission-gtk desktop='^7' follow=on
#bspc rule -a Thunar desktop='^8' follow=on
#bspc rule -a discord desktop='^9' follow=on
#bspc rule -a Spotify desktop='^10' follow=on

#Spotify fix  --move desktop 10
#sleep 1
#wmctrl -r Spotify -t 10
#exit

#polybar hidden when fullscreen for vlc, youtube, mpv ...
#find out the name of your monitor with xrandr
#xdo below -t $(xdo id -n root) $(xdo id -a polybar-main_DP-1)
#xdo below -t $(xdo id -n root) $(xdo id -a polybar-main_HDMI1)
#xdo below -t $(xdo id -n root) $(xdo id -a polybar-main_HDMI2)

###External rules
##Pseudo automatic mode: always splits focused window when opening new window
#bspc config external_rules_command ~/.config/bspwm/scripts/pseudo_automatic_mode
##Adjust new window: splits biggest windows to keep windows about the same size
#bspc config external_rules_command ~/.config/bspwm/scripts/adjust-new-window
